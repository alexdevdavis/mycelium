/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as CreateRouteImport } from './routes/create'
import { Route as BlogPostIdRouteImport } from './routes/$blogPostId'
import { Route as IndexRouteImport } from './routes/index'
import { Route as BlogPostIdEditRouteImport } from './routes/$blogPostId.edit'

const CreateRoute = CreateRouteImport.update({
  id: '/create',
  path: '/create',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogPostIdRoute = BlogPostIdRouteImport.update({
  id: '/$blogPostId',
  path: '/$blogPostId',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const BlogPostIdEditRoute = BlogPostIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => BlogPostIdRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/$blogPostId': typeof BlogPostIdRouteWithChildren
  '/create': typeof CreateRoute
  '/$blogPostId/edit': typeof BlogPostIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/$blogPostId': typeof BlogPostIdRouteWithChildren
  '/create': typeof CreateRoute
  '/$blogPostId/edit': typeof BlogPostIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/$blogPostId': typeof BlogPostIdRouteWithChildren
  '/create': typeof CreateRoute
  '/$blogPostId/edit': typeof BlogPostIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/$blogPostId' | '/create' | '/$blogPostId/edit'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/$blogPostId' | '/create' | '/$blogPostId/edit'
  id: '__root__' | '/' | '/$blogPostId' | '/create' | '/$blogPostId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogPostIdRoute: typeof BlogPostIdRouteWithChildren
  CreateRoute: typeof CreateRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/create': {
      id: '/create'
      path: '/create'
      fullPath: '/create'
      preLoaderRoute: typeof CreateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$blogPostId': {
      id: '/$blogPostId'
      path: '/$blogPostId'
      fullPath: '/$blogPostId'
      preLoaderRoute: typeof BlogPostIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$blogPostId/edit': {
      id: '/$blogPostId/edit'
      path: '/edit'
      fullPath: '/$blogPostId/edit'
      preLoaderRoute: typeof BlogPostIdEditRouteImport
      parentRoute: typeof BlogPostIdRoute
    }
  }
}

interface BlogPostIdRouteChildren {
  BlogPostIdEditRoute: typeof BlogPostIdEditRoute
}

const BlogPostIdRouteChildren: BlogPostIdRouteChildren = {
  BlogPostIdEditRoute: BlogPostIdEditRoute,
}

const BlogPostIdRouteWithChildren = BlogPostIdRoute._addFileChildren(
  BlogPostIdRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogPostIdRoute: BlogPostIdRouteWithChildren,
  CreateRoute: CreateRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
